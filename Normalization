Normalization in SQL/RDBMS

What is Normalization?
Data Redundancy -> data duplication

Different levels of Normalization (Different Normal Forms):
1NF - First Normal Form
2NF
3NF
4NF
BCNF - Boyce-Codd Normal Form
5NF
6NF

Golden Standard of Normalization - untill 3NF

1NF - First Normal Form:
------------------------
1. Every column/attribute need to have a sigle value.
2. Each row should be unique. Either through a single or multiple columns. Not mandatory to have primary key.

2Nf - Second Normal Form:
-------------------------
1. Must be in 1NF
2. All non key attributes must be fully dependent on candidate key.
   i.e. If a non-key column is partially dependent on candidate key (subset of columns forming candidate key) then split them into seperate tables.
3. Every table should have primary key and relationship between the tables should be formed using foreign key.

Candidate Key:
Set of columns which uniquely identify a record
A table can have multiple candidate keys because there can be multiple set of columns which uniquely identify a record/row in a table.

Non-Key columns:
Columns which are not part of the candidate key or primary key

Partial Dependency:
If yor candidate key is a combination of 2 columns (or multiple columns) then every non key column (columns which are not part of the candidate) should be fully dependent on all the columns
If there is any non key column which depends only on one of the candidate key columns then this results in partial dependency.

3NF - Third Normal Form:
------------------------
1. Must be in 2NF
2. Avoid transitive dependencies

Transitive Dependency:
Lets say you have a table T which has 3 columns namely A, B, and C
If A is functionally depends on B and B is functionally depends on C then we can say that A is functionally dependent on C.


Different Anomolies:
--------------------
Insertion Anomoly
Deletion Anomoly
Updation Anomoly

Fact Table and Dimention Table:
-------------------------------
Fact Table: Actual business data
Measures - Number, Value
It contains measurements, facts or metrics of the attributes
Hold no meaning in itself
Numeric and quantifiable
Created or loaded after dimentions are loaded
Primary key is a new column identifying the unique row, references the tables with foreign key

Dimention Tables: Lokkup data
Gives context to facts, holds attributes for the facts
Created or loaded before facts are loaded
Primary key is referenced by fact tables.
Dimention - Context to fact table

star schema and snowflake schema:
---------------------------------
Normalization

formation of fact table in middle and dimentions connected to fact in star shape.

If dimetion table extends furthur and connect to more dimention tables then it forms a snowflake shape

Galaxy Schema (Bridge schema) - Common dimention tables
More than one fcat table and dimention tables are connected to one or more fact tables.

Slowly changing Dimention:
--------------------------
A Slowly Changing Dimention (SCD) is a dimention that stores and manages both current and historical data over time in a data warehouse.

SCD Type 0 - Ignore any changes and audit the changes
SCD Type 1 - Overwrite the changes - Null values, At later point
*SCD Type 2 - History will be added as a new Row (StartDate, EndDate, and IsCurrent)
SCD Type 3 - History will be added as a new Column (Previous value) - Only allow last version of the history
SCD Type 4 - A new dimention will be added (Move rapidly changing column to new dimention)
SCD Type 6 - Combination of Type 21 Type 2, and Type 3 (1+2+3=6)




