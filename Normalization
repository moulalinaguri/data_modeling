Normalization in SQL/RDBMS

What is Normalization?
Data Redundancy -> data duplication

Different levels of Normalization (Different Normal Forms):
1NF - First Normal Form
2NF
3NF
4NF
BCNF - Boyce-Codd Normal Form
5NF
6NF

Golden Standard of Normalization - untill 3NF

1NF - First Normal Form:
------------------------
1. Every column/attribute need to have a sigle value.
2. Each row should be unique. Either through a single or multiple columns. Not mandatory to have primary key.

2Nf - Second Normal Form:
-------------------------
1. Must be in 1NF
2. All non key attributes must be fully dependent on candidate key.
   i.e. If a non-key column is partially dependent on candidate key (subset of columns forming candidate key) then split them into seperate tables.
3. Every table should have primary key and relationship between the tables should be formed using foreign key.

Candidate Key:
Set of columns which uniquely identify a record
A table can have multiple candidate keys because there can be multiple set of columns which uniquely identify a record/row in a table.

Non-Key columns:
Columns which are not part of the candidate key or primary key

Partial Dependency:
If yor candidate key is a combination of 2 columns (or multiple columns) then every non key column (columns which are not part of the candidate) should be fully dependent on all the columns
If there is any non key column which depends only on one of the candidate key columns then this results in partial dependency.

3NF - Third Normal Form:
------------------------
1. Must be in 2NF
2. Avoid transitive dependencies

Transitive Dependency:
Lets say you have a table T which has 3 columns namely A, B, and C
If A is functionally depends on B and B is functionally depends on C then we can say that A is functionally dependent on C.


Different Anomolies:
--------------------
Insertion Anomoly
Deletion Anomoly
Updation Anomoly

